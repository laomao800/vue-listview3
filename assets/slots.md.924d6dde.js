import{_ as s,o as t,c as a,R as o}from"./chunks/framework.896e1521.js";const C=JSON.parse('{"title":"Slots","description":"","frontmatter":{},"headers":[],"relativePath":"slots.md","filePath":"slots.md"}'),l={name:"slots.md"},n=o(`<h1 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h1><p>其中 <code>filterbar</code> 、<code>footer</code> 与 <a href="./create.html#replacecomponents"><code>replaceComponent</code></a> 类似，会渲染于整个完整区域，既设置后下方其他内部 slot <code>filterbar-*</code> ， <code>footer-*</code> 等不再显示。</p><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>content</td><td>内容主体区域</td></tr><tr><td>header</td><td>顶部页面标题、面包屑主体区域</td></tr><tr><td>filterbar</td><td>搜索栏主体区域</td></tr><tr><td>footer</td><td>底部页码栏主体区域</td></tr><tr><td>filterbar-top</td><td>搜索栏顶部</td></tr><tr><td>filterbar-bottom</td><td>搜索栏底部</td></tr><tr><td>filterbar-left</td><td>搜索栏左侧</td></tr><tr><td>filterbar-right</td><td>搜索栏右侧</td></tr><tr><td>prepend-submit</td><td>搜索栏右侧“搜索”按钮左侧</td></tr><tr><td>append-submit</td><td>搜索栏右侧“重置”按钮右侧</td></tr><tr><td>prepend-more</td><td>搜索栏折叠按钮左侧</td></tr><tr><td>append-more</td><td>搜索栏折叠按钮右侧</td></tr><tr><td>footer-left</td><td>底部页码栏左侧，该插槽会覆盖居左显示页码组件</td></tr><tr><td>footer-center</td><td>底部页码栏中间位置</td></tr><tr><td>footer-right</td><td>底部页码栏右侧，该插槽会覆盖居右显示页码组件</td></tr></tbody></table><h2 id="slot-props" tabindex="-1">Slot props <a class="header-anchor" href="#slot-props" aria-label="Permalink to &quot;Slot props&quot;">​</a></h2><p>所有 slot 都接收内部 <a href="./lv-store.html">lvStore</a> 实例作为 slot props 。</p><p>用例：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">listview</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">state</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">state.contentLoading</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Loading...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-else-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">state.contentMessage.text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ state.contentMessage }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-else</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(item, index) in state.contentData.items</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          {{ item.name }}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">listview</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,7),p=[n];function e(r,c,D,F,d,y){return t(),a("div",null,p)}const A=s(l,[["render",e]]);export{C as __pageData,A as default};
