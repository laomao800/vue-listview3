import{_ as t,o as e,c as a,R as d}from"./chunks/framework.896e1521.js";const b=JSON.parse('{"title":"lvStore","description":"","frontmatter":{},"headers":[],"relativePath":"lv-store.md","filePath":"lv-store.md"}'),r={name:"lv-store.md"},o=d('<h1 id="lvstore" tabindex="-1">lvStore <a class="header-anchor" href="#lvstore" aria-label="Permalink to &quot;lvStore&quot;">​</a></h1><p>Listivew 内部底层数据及方法存储于名为 <code>lvStore</code> 的 provider。在各 slot props 及使用<a href="./create.html#replaceComponents"><code>replaceComponents</code></a>时可通过该途径访问底层数据及方法。</p><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h2><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h3><table><thead><tr><th>name</th><th>type</th><th>说明</th></tr></thead><tbody><tr><td>contentHeight</td><td>number</td><td>内容区域高度</td></tr><tr><td>contentLoading</td><td>boolean</td><td>是否处于内容请求状态中</td></tr><tr><td>contentData</td><td>object</td><td>默认<code>{ items: [], total: 0 }</code>。内容数据及总条数</td></tr><tr><td>contentMessage</td><td>object</td><td>默认<code>{ type: &#39;&#39;, text: &#39;&#39; }</code>。内容提示，可通过 <code>setContentMessage</code> 设置内容</td></tr><tr><td>currentPage</td><td>number</td><td>当前页码</td></tr><tr><td>currentPageSize</td><td>number</td><td>每页条目数</td></tr><tr><td>selection</td><td>any[]</td><td>当前内容区域勾选选中项</td></tr><tr><td>filterModel</td><td></td><td>搜索栏存储值</td></tr><tr><td>usePage</td><td>同 props 同名属性，是否启用页码/页码参数</td><td></td></tr><tr><td>pagePosition</td><td>同 props 同名属性，页码组件位置</td><td></td></tr><tr><td>pageSizes</td><td>同 props 同名属性，分页“每页数量”可选值</td><td></td></tr></tbody></table><h3 id="search" tabindex="-1"><code>search</code> <a class="header-anchor" href="#search" aria-label="Permalink to &quot;`search`&quot;">​</a></h3><p>手动触发数据请求。该方法返回一个 Promise ，数据请求成功后 resolve 。与 Listview 实例 <a href="./methods-and-events.html#search">search</a> 方法一致。</p><h3 id="setcontentmessage" tabindex="-1"><code>setContentMessage</code> <a class="header-anchor" href="#setcontentmessage" aria-label="Permalink to &quot;`setContentMessage`&quot;">​</a></h3><p>设置内容区域提示文本。与 Listview 实例 <a href="./methods-and-events.html#setContentMessage">setContentMessage</a> 方法一致。</p><h3 id="cleancontentdata" tabindex="-1"><code>cleanContentData</code> <a class="header-anchor" href="#cleancontentdata" aria-label="Permalink to &quot;`cleanContentData`&quot;">​</a></h3><p>清空内容数据。</p><h3 id="resetfiltermodel" tabindex="-1"><code>resetFilterModel</code> <a class="header-anchor" href="#resetfiltermodel" aria-label="Permalink to &quot;`resetFilterModel`&quot;">​</a></h3><p>清空搜索栏数据。</p>',13),s=[o];function n(c,l,i,h,p,m){return e(),a("div",null,s)}const _=t(r,[["render",n]]);export{b as __pageData,_ as default};
